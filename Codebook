A code book describes the data in a data set, including variable names, descriptions, data formats (i.e. character / numeric), and any special coding conventions (e.g. K = thousands, M = Millions, B = Billions) etc.
==================================================================
## Data Overview:

Human Activity Recognition Using Smartphones Dataset
Jorge L. Reyes-Ortiz, Davide Anguita, Alessandro Ghio, Luca Oneto.
activityrecognition@smartlab.ws

The experiments have been carried out with a group of 30 volunteers within an age bracket of 19-48 years. Each person performed six activities (WALKING, WALKING_UPSTAIRS, WALKING_DOWNSTAIRS, SITTING, STANDING, LAYING) wearing a smartphone (Samsung Galaxy S II) on the waist. Using its embedded accelerometer and gyroscope, we captured 3-axial linear acceleration and 3-axial angular velocity at a constant rate of 50Hz. The experiments have been video-recorded to label the data manually. The obtained dataset has been randomly partitioned into two sets, where 70% of the volunteers was selected for generating the training data and 30% the test data. 

The sensor signals (accelerometer and gyroscope) were pre-processed by applying noise filters and then sampled in fixed-width sliding windows of 2.56 sec and 50% overlap (128 readings/window). The sensor acceleration signal, which has gravitational and body motion components, was separated using a Butterworth low-pass filter into body acceleration and gravity. The gravitational force is assumed to have only low frequency components, therefore a filter with 0.3 Hz cutoff frequency was used. From each window, a vector of features was obtained by calculating variables from the time and frequency domain. See 'features_info.txt' for more details. 

For each record it is provided:
- Triaxial acceleration from the accelerometer (total acceleration) and the estimated body acceleration.
- Triaxial Angular velocity from the gyroscope. 
- A 561-feature vector with time and frequency domain variables. 
- Its activity label. 
- An identifier of the subject who carried out the experiment.

License:
Use of this dataset in publications must be acknowledged by referencing the following publication [1] 
[1] Davide Anguita, Alessandro Ghio, Luca Oneto, Xavier Parra and Jorge L. Reyes-Ortiz. Human Activity Recognition on Smartphones using a Multiclass Hardware-Friendly Support Vector Machine. International Workshop of Ambient Assisted Living (IWAAL 2012). Vitoria-Gasteiz, Spain. Dec 2012
==================================================================
#Test Variables
testFile: Contains the test set data from a txt file. 'data.frame':	2947 obs. of  561 variables. Numeric.
testLabel: Contains the activity label for test set (WALKING, WALKING_UPSTAIRS, WALKING_DOWNSTAIRS, SITTING, STANDING, LAYING). 'data.frame':	2947 obs. of  1 variable. Integer.
testSubject: Dataframe. Contains the subject numbers for the 30 volunteers ages 19-48. 'data.frame':	2947 obs. of  1 variable. Integer.
variableNames: Contains the variables used for both test and train. 'data.frame':	561 obs. of  2 variables. Integer and character.
bindedTestData: Binds the data for test subject, activity label, and test data.'data.frame':	2947 obs. of  563 variables. Integer and numeric.

#Train Variables
trainFile: Contains the train set data from a txt file.data.frame':	7352 obs. of  561 variables: Numeric
trainLabel: Contains the activity label for train set (WALKING, WALKING_UPSTAIRS, WALKING_DOWNSTAIRS, SITTING, STANDING, LAYING). 'data.frame':	2947 obs. of  1 variable. Integer.
trainSubject: Contains the subject numbers for the 30 volunteers ages 19-48. 'data.frame':	7352 obs. of  1 variable. Integer.
bindedTrainData: Binds the data for train subject, activity label, and test data.'data.frame':	7352 obs. of  563 variables: Integer and numeric.

==================================================================
##Information about the data collected and the subsequent variables used in this project.

The features selected for this database come from the accelerometer and gyroscope 3-axial raw signals tAcc-XYZ and tGyro-XYZ. These time domain signals (prefix 't' to denote time) were captured at a constant rate of 50 Hz. Then they were filtered using a median filter and a 3rd order low pass Butterworth filter with a corner frequency of 20 Hz to remove noise. Similarly, the acceleration signal was then separated into body and gravity acceleration signals (tBodyAcc-XYZ and tGravityAcc-XYZ) using another low pass Butterworth filter with a corner frequency of 0.3 Hz. 

Subsequently, the body linear acceleration and angular velocity were derived in time to obtain Jerk signals (tBodyAccJerk-XYZ and tBodyGyroJerk-XYZ). Also the magnitude of these three-dimensional signals were calculated using the Euclidean norm (tBodyAccMag, tGravityAccMag, tBodyAccJerkMag, tBodyGyroMag, tBodyGyroJerkMag). 

Finally a Fast Fourier Transform (FFT) was applied to some of these signals producing fBodyAcc-XYZ, fBodyAccJerk-XYZ, fBodyGyro-XYZ, fBodyAccJerkMag, fBodyGyroMag, fBodyGyroJerkMag. (Note the 'f' to indicate frequency domain signals). 

These signals were used to estimate variables of the feature vector for each pattern:  
'-XYZ' is used to denote 3-axial signals in the X, Y and Z directions. The variables include: 
  tBodyAcc-XYZ
  tGravityAcc-XYZ
  tBodyAccJerk-XYZ
  tBodyGyro-XYZ
  tBodyGyroJerk-XYZ
  tBodyAccMag
  tGravityAccMag
  tBodyAccJerkMag
  tBodyGyroMag
  tBodyGyroJerkMag
  fBodyAcc-XYZ
  fBodyAccJerk-XYZ
  fBodyGyro-XYZ
  fBodyAccMag
  fBodyAccJerkMag
  fBodyGyroMag
  fBodyGyroJerkMag

==================================================================
#Merged Variables
mergedData: Merges the bindedTestData and bindedTrainData together into a new dataframe. 'data.frame':	10299 obs. of  563 variables: Integer and numeric.
mergedDataSorted: Shows the mergedData frame in order based on subject number (from 1-10). 'data.frame':	10299 obs. of  563 variables: Integer, factor, and numeric
mergedDataSorted$labels: as a factor, this includes the activity labels. levels = c(1, 2, 3, 4, 5, 6), labels = c("walking", "walking upstairs", "walking downstairs", "sitting", "standing", "laying"))
mergedDataExtractedTest: Extracts the subject, labels, and then the variables showing just the mean and standard deviation(std) value in the mergedDataSorted dataframe. 'data.frame':	10299 obs. of  68 variables: Integer, factor, and numeric
mergedDataExtractedTest: Renamed the variables to Subject and Activity. Then gsub was used to change dashes to periods, and remove (). 

Then variable names were changed in this way to provide additional clarity:
  "tBody" was replaced with "TimeBody"
  "fBody" was replaced with "FrequencyBody"
  "tGravity" was replaced with "TimeGravity"
  "Gyro" was replaced with "Gyroscope"
  "Acc" was replaced with "Acceleration"
  "Mag" was replaced with "Magnitude"
  
==================================================================
## mergedDataExtractedTest detailed information:

'data.frame':	10299 obs. of  68 variables:
 $ Subject                                        : int  1 1 1 1 1 1 1 1 1 1 ...
 $ Activity                                       : Factor w/ 6 levels "walking","walking upstairs",..: 5 5 5 5 5 5 5 5 5 5 ...
 $ TimeBodyAcceleration.mean.X                    : num  0.289 0.278 0.28 0.279 0.277 ...
 $ TimeBodyAcceleration.mean.Y                    : num  -0.0203 -0.0164 -0.0195 -0.0262 -0.0166 ...
 $ TimeBodyAcceleration.mean.Z                    : num  -0.133 -0.124 -0.113 -0.123 -0.115 ...
 $ TimeGravityAcceleration.mean.X                 : num  0.963 0.967 0.967 0.968 0.968 ...
 $ TimeGravityAcceleration.mean.Y                 : num  -0.141 -0.142 -0.142 -0.144 -0.149 ...
 $ TimeGravityAcceleration.mean.Z                 : num  0.1154 0.1094 0.1019 0.0999 0.0945 ...
 $ TimeBodyAccelerationJerk.mean.X                : num  0.078 0.074 0.0736 0.0773 0.0734 ...
 $ TimeBodyAccelerationJerk.mean.Y                : num  0.005 0.00577 0.0031 0.02006 0.01912 ...
 $ TimeBodyAccelerationJerk.mean.Z                : num  -0.06783 0.02938 -0.00905 -0.00986 0.01678 ...
 $ TimeBodyGyroscope.mean.X                       : num  -0.0061 -0.0161 -0.0317 -0.0434 -0.034 ...
 $ TimeBodyGyroscope.mean.Y                       : num  -0.0314 -0.0839 -0.1023 -0.0914 -0.0747 ...
 $ TimeBodyGyroscope.mean.Z                       : num  0.1077 0.1006 0.0961 0.0855 0.0774 ...
 $ TimeBodyGyroscopeJerk.mean.X                   : num  -0.0992 -0.1105 -0.1085 -0.0912 -0.0908 ...
 $ TimeBodyGyroscopeJerk.mean.Y                   : num  -0.0555 -0.0448 -0.0424 -0.0363 -0.0376 ...
 $ TimeBodyGyroscopeJerk.mean.Z                   : num  -0.062 -0.0592 -0.0558 -0.0605 -0.0583 ...
 $ TimeBodyAccelerationMagnitude.mean             : num  -0.959 -0.979 -0.984 -0.987 -0.993 ...
 $ TimeGravityAccelerationMagnitude.mean          : num  -0.959 -0.979 -0.984 -0.987 -0.993 ...
 $ TimeBodyAccelerationJerkMagnitude.mean         : num  -0.993 -0.991 -0.989 -0.993 -0.993 ...
 $ TimeBodyGyroscopeMagnitude.mean                : num  -0.969 -0.981 -0.976 -0.982 -0.985 ...
 $ TimeBodyGyroscopeJerkMagnitude.mean            : num  -0.994 -0.995 -0.993 -0.996 -0.996 ...
 $ FrequencyBodyAcceleration.mean.X               : num  -0.995 -0.997 -0.994 -0.995 -0.997 ...
 $ FrequencyBodyAcceleration.mean.Y               : num  -0.983 -0.977 -0.973 -0.984 -0.982 ...
 $ FrequencyBodyAcceleration.mean.Z               : num  -0.939 -0.974 -0.983 -0.991 -0.988 ...
 $ FrequencyBodyAccelerationJerk.mean.X           : num  -0.992 -0.995 -0.991 -0.994 -0.996 ...
 $ FrequencyBodyAccelerationJerk.mean.Y           : num  -0.987 -0.981 -0.982 -0.989 -0.989 ...
 $ FrequencyBodyAccelerationJerk.mean.Z           : num  -0.99 -0.99 -0.988 -0.991 -0.991 ...
 $ FrequencyBodyGyroscope.mean.X                  : num  -0.987 -0.977 -0.975 -0.987 -0.982 ...
 $ FrequencyBodyGyroscope.mean.Y                  : num  -0.982 -0.993 -0.994 -0.994 -0.993 ...
 $ FrequencyBodyGyroscope.mean.Z                  : num  -0.99 -0.99 -0.987 -0.987 -0.989 ...
 $ FrequencyBodyAccelerationMagnitude.mean        : num  -0.952 -0.981 -0.988 -0.988 -0.994 ...
 $ FrequencyBodyBodyAccelerationJerkMagnitude.mean: num  -0.994 -0.99 -0.989 -0.993 -0.996 ...
 $ FrequencyBodyBodyGyroscopeMagnitude.mean       : num  -0.98 -0.988 -0.989 -0.989 -0.991 ...
 $ FrequencyBodyBodyGyroscopeJerkMagnitude.mean   : num  -0.992 -0.996 -0.995 -0.995 -0.995 ...
 $ TimeBodyAcceleration.std.X                     : num  -0.995 -0.998 -0.995 -0.996 -0.998 ...
 $ TimeBodyAcceleration.std.Y                     : num  -0.983 -0.975 -0.967 -0.983 -0.981 ...
 $ TimeBodyAcceleration.std.Z                     : num  -0.914 -0.96 -0.979 -0.991 -0.99 ...
 $ TimeGravityAcceleration.std.X                  : num  -0.985 -0.997 -1 -0.997 -0.998 ...
 $ TimeGravityAcceleration.std.Y                  : num  -0.982 -0.989 -0.993 -0.981 -0.988 ...
 $ TimeGravityAcceleration.std.Z                  : num  -0.878 -0.932 -0.993 -0.978 -0.979 ...
 $ TimeBodyAccelerationJerk.std.X                 : num  -0.994 -0.996 -0.991 -0.993 -0.996 ...
 $ TimeBodyAccelerationJerk.std.Y                 : num  -0.988 -0.981 -0.981 -0.988 -0.988 ...
 $ TimeBodyAccelerationJerk.std.Z                 : num  -0.994 -0.992 -0.99 -0.993 -0.992 ...
 $ TimeBodyGyroscope.std.X                        : num  -0.985 -0.983 -0.976 -0.991 -0.985 ...
 $ TimeBodyGyroscope.std.Y                        : num  -0.977 -0.989 -0.994 -0.992 -0.992 ...
 $ TimeBodyGyroscope.std.Z                        : num  -0.992 -0.989 -0.986 -0.988 -0.987 ...
 $ TimeBodyGyroscopeJerk.std.X                    : num  -0.992 -0.99 -0.988 -0.991 -0.991 ...
 $ TimeBodyGyroscopeJerk.std.Y                    : num  -0.993 -0.997 -0.996 -0.997 -0.996 ...
 $ TimeBodyGyroscopeJerk.std.Z                    : num  -0.992 -0.994 -0.992 -0.993 -0.995 ...
 $ TimeBodyAccelerationMagnitude.std              : num  -0.951 -0.976 -0.988 -0.986 -0.991 ...
 $ TimeGravityAccelerationMagnitude.std           : num  -0.951 -0.976 -0.988 -0.986 -0.991 ...
 $ TimeBodyAccelerationJerkMagnitude.std          : num  -0.994 -0.992 -0.99 -0.993 -0.996 ...
 $ TimeBodyGyroscopeMagnitude.std                 : num  -0.964 -0.984 -0.986 -0.987 -0.989 ...
 $ TimeBodyGyroscopeJerkMagnitude.std             : num  -0.991 -0.996 -0.995 -0.995 -0.995 ...
 $ FrequencyBodyAcceleration.std.X                : num  -0.995 -0.999 -0.996 -0.996 -0.999 ...
 $ FrequencyBodyAcceleration.std.Y                : num  -0.983 -0.975 -0.966 -0.983 -0.98 ...
 $ FrequencyBodyAcceleration.std.Z                : num  -0.906 -0.955 -0.977 -0.99 -0.992 ...
 $ FrequencyBodyAccelerationJerk.std.X            : num  -0.996 -0.997 -0.991 -0.991 -0.997 ...
 $ FrequencyBodyAccelerationJerk.std.Y            : num  -0.991 -0.982 -0.981 -0.987 -0.989 ...
 $ FrequencyBodyAccelerationJerk.std.Z            : num  -0.997 -0.993 -0.99 -0.994 -0.993 ...
 $ FrequencyBodyGyroscope.std.X                   : num  -0.985 -0.985 -0.977 -0.993 -0.986 ...
 $ FrequencyBodyGyroscope.std.Y                   : num  -0.974 -0.987 -0.993 -0.992 -0.992 ...
 $ FrequencyBodyGyroscope.std.Z                   : num  -0.994 -0.99 -0.987 -0.989 -0.988 ...
 $ FrequencyBodyAccelerationMagnitude.std         : num  -0.956 -0.976 -0.989 -0.987 -0.99 ...
 $ FrequencyBodyBodyAccelerationJerkMagnitude.std : num  -0.994 -0.992 -0.991 -0.992 -0.994 ...
 $ FrequencyBodyBodyGyroscopeMagnitude.std        : num  -0.961 -0.983 -0.986 -0.988 -0.989 ...
 $ FrequencyBodyBodyGyroscopeJerkMagnitude.std    : num  -0.991 -0.996 -0.995 -0.995 -0.995 ...

==================================================================
## independentData: A dataframe copy of the mergedDataExtractedTest. 'data.frame':	10299 obs. of  68 variables: Integer, factor, numeric.
independentDataAverages2: The Independent Tidy Dataset. The dataset has N=180 rows and 68 columns. 180 rows have no missing values on any column.
This dataframe is sorted by subject and activity, showing the mean of each variable. 

tibble [180 × 68] (S3: grouped_df/tbl_df/tbl/data.frame)
 $ Subject                                        : int [1:180] 1 1 1 1 1 1 2 2 2 2 ...
 $ Activity                                       : Factor w/ 6 levels "walking","walking upstairs",..: 1 2 3 4 5 6 1 2 3 4 ...
 $ TimeBodyAcceleration.mean.X                    : num [1:180] 0.277 0.255 0.289 0.261 0.279 ...
 $ TimeBodyAcceleration.mean.Y                    : num [1:180] -0.01738 -0.02395 -0.00992 -0.00131 -0.01614 ...
 $ TimeBodyAcceleration.mean.Z                    : num [1:180] -0.1111 -0.0973 -0.1076 -0.1045 -0.1106 ...
 $ TimeGravityAcceleration.mean.X                 : num [1:180] 0.935 0.893 0.932 0.832 0.943 ...
 $ TimeGravityAcceleration.mean.Y                 : num [1:180] -0.282 -0.362 -0.267 0.204 -0.273 ...
 $ TimeGravityAcceleration.mean.Z                 : num [1:180] -0.0681 -0.0754 -0.0621 0.332 0.0135 ...
 $ TimeBodyAccelerationJerk.mean.X                : num [1:180] 0.074 0.1014 0.0542 0.0775 0.0754 ...
 $ TimeBodyAccelerationJerk.mean.Y                : num [1:180] 0.028272 0.019486 0.02965 -0.000619 0.007976 ...
 $ TimeBodyAccelerationJerk.mean.Z                : num [1:180] -0.00417 -0.04556 -0.01097 -0.00337 -0.00369 ...
 $ TimeBodyGyroscope.mean.X                       : num [1:180] -0.0418 0.0505 -0.0351 -0.0454 -0.024 ...
 $ TimeBodyGyroscope.mean.Y                       : num [1:180] -0.0695 -0.1662 -0.0909 -0.0919 -0.0594 ...
 $ TimeBodyGyroscope.mean.Z                       : num [1:180] 0.0849 0.0584 0.0901 0.0629 0.0748 ...
 $ TimeBodyGyroscopeJerk.mean.X                   : num [1:180] -0.09 -0.1222 -0.074 -0.0937 -0.0996 ...
 $ TimeBodyGyroscopeJerk.mean.Y                   : num [1:180] -0.0398 -0.0421 -0.044 -0.0402 -0.0441 ...
 $ TimeBodyGyroscopeJerk.mean.Z                   : num [1:180] -0.0461 -0.0407 -0.027 -0.0467 -0.049 ...
 $ TimeBodyAccelerationMagnitude.mean             : num [1:180] -0.137 -0.1299 0.0272 -0.9485 -0.9843 ...
 $ TimeGravityAccelerationMagnitude.mean          : num [1:180] -0.137 -0.1299 0.0272 -0.9485 -0.9843 ...
 $ TimeBodyAccelerationJerkMagnitude.mean         : num [1:180] -0.1414 -0.4665 -0.0894 -0.9874 -0.9924 ...
 $ TimeBodyGyroscopeMagnitude.mean                : num [1:180] -0.161 -0.1267 -0.0757 -0.9309 -0.9765 ...
 $ TimeBodyGyroscopeJerkMagnitude.mean            : num [1:180] -0.299 -0.595 -0.295 -0.992 -0.995 ...
 $ FrequencyBodyAcceleration.mean.X               : num [1:180] -0.2028 -0.4043 0.0382 -0.9796 -0.9952 ...
 $ FrequencyBodyAcceleration.mean.Y               : num [1:180] 0.08971 -0.19098 0.00155 -0.94408 -0.97707 ...
 $ FrequencyBodyAcceleration.mean.Z               : num [1:180] -0.332 -0.433 -0.226 -0.959 -0.985 ...
 $ FrequencyBodyAccelerationJerk.mean.X           : num [1:180] -0.1705 -0.4799 -0.0277 -0.9866 -0.9946 ...
 $ FrequencyBodyAccelerationJerk.mean.Y           : num [1:180] -0.0352 -0.4134 -0.1287 -0.9816 -0.9854 ...
 $ FrequencyBodyAccelerationJerk.mean.Z           : num [1:180] -0.469 -0.685 -0.288 -0.986 -0.991 ...
 $ FrequencyBodyGyroscope.mean.X                  : num [1:180] -0.339 -0.493 -0.352 -0.976 -0.986 ...
 $ FrequencyBodyGyroscope.mean.Y                  : num [1:180] -0.1031 -0.3195 -0.0557 -0.9758 -0.989 ...
 $ FrequencyBodyGyroscope.mean.Z                  : num [1:180] -0.2559 -0.4536 -0.0319 -0.9513 -0.9808 ...
 $ FrequencyBodyAccelerationMagnitude.mean        : num [1:180] -0.1286 -0.3524 0.0966 -0.9478 -0.9854 ...
 $ FrequencyBodyBodyAccelerationJerkMagnitude.mean: num [1:180] -0.0571 -0.4427 0.0262 -0.9853 -0.9925 ...
 $ FrequencyBodyBodyGyroscopeMagnitude.mean       : num [1:180] -0.199 -0.326 -0.186 -0.958 -0.985 ...
 $ FrequencyBodyBodyGyroscopeJerkMagnitude.mean   : num [1:180] -0.319 -0.635 -0.282 -0.99 -0.995 ...
 $ TimeBodyAcceleration.std.X                     : num [1:180] -0.284 -0.355 0.03 -0.977 -0.996 ...
 $ TimeBodyAcceleration.std.Y                     : num [1:180] 0.11446 -0.00232 -0.03194 -0.92262 -0.97319 ...
 $ TimeBodyAcceleration.std.Z                     : num [1:180] -0.26 -0.0195 -0.2304 -0.9396 -0.9798 ...
 $ TimeGravityAcceleration.std.X                  : num [1:180] -0.977 -0.956 -0.951 -0.968 -0.994 ...
 $ TimeGravityAcceleration.std.Y                  : num [1:180] -0.971 -0.953 -0.937 -0.936 -0.981 ...
 $ TimeGravityAcceleration.std.Z                  : num [1:180] -0.948 -0.912 -0.896 -0.949 -0.976 ...
 $ TimeBodyAccelerationJerk.std.X                 : num [1:180] -0.1136 -0.4468 -0.0123 -0.9864 -0.9946 ...
 $ TimeBodyAccelerationJerk.std.Y                 : num [1:180] 0.067 -0.378 -0.102 -0.981 -0.986 ...
 $ TimeBodyAccelerationJerk.std.Z                 : num [1:180] -0.503 -0.707 -0.346 -0.988 -0.992 ...
 $ TimeBodyGyroscope.std.X                        : num [1:180] -0.474 -0.545 -0.458 -0.977 -0.987 ...
 $ TimeBodyGyroscope.std.Y                        : num [1:180] -0.05461 0.00411 -0.12635 -0.96647 -0.98773 ...
 $ TimeBodyGyroscope.std.Z                        : num [1:180] -0.344 -0.507 -0.125 -0.941 -0.981 ...
 $ TimeBodyGyroscopeJerk.std.X                    : num [1:180] -0.207 -0.615 -0.487 -0.992 -0.993 ...
 $ TimeBodyGyroscopeJerk.std.Y                    : num [1:180] -0.304 -0.602 -0.239 -0.99 -0.995 ...
 $ TimeBodyGyroscopeJerk.std.Z                    : num [1:180] -0.404 -0.606 -0.269 -0.988 -0.992 ...
 $ TimeBodyAccelerationMagnitude.std              : num [1:180] -0.2197 -0.325 0.0199 -0.9271 -0.9819 ...
 $ TimeGravityAccelerationMagnitude.std           : num [1:180] -0.2197 -0.325 0.0199 -0.9271 -0.9819 ...
 $ TimeBodyAccelerationJerkMagnitude.std          : num [1:180] -0.0745 -0.479 -0.0258 -0.9841 -0.9931 ...
 $ TimeBodyGyroscopeMagnitude.std                 : num [1:180] -0.187 -0.149 -0.226 -0.935 -0.979 ...
 $ TimeBodyGyroscopeJerkMagnitude.std             : num [1:180] -0.325 -0.649 -0.307 -0.988 -0.995 ...
 $ FrequencyBodyAcceleration.std.X                : num [1:180] -0.3191 -0.3374 0.0243 -0.9764 -0.996 ...
 $ FrequencyBodyAcceleration.std.Y                : num [1:180] 0.056 0.0218 -0.113 -0.9173 -0.9723 ...
 $ FrequencyBodyAcceleration.std.Z                : num [1:180] -0.28 0.086 -0.298 -0.934 -0.978 ...
 $ FrequencyBodyAccelerationJerk.std.X            : num [1:180] -0.1336 -0.4619 -0.0863 -0.9875 -0.9951 ...
 $ FrequencyBodyAccelerationJerk.std.Y            : num [1:180] 0.107 -0.382 -0.135 -0.983 -0.987 ...
 $ FrequencyBodyAccelerationJerk.std.Z            : num [1:180] -0.535 -0.726 -0.402 -0.988 -0.992 ...
 $ FrequencyBodyGyroscope.std.X                   : num [1:180] -0.517 -0.566 -0.495 -0.978 -0.987 ...
 $ FrequencyBodyGyroscope.std.Y                   : num [1:180] -0.0335 0.1515 -0.1814 -0.9623 -0.9871 ...
 $ FrequencyBodyGyroscope.std.Z                   : num [1:180] -0.437 -0.572 -0.238 -0.944 -0.982 ...
 $ FrequencyBodyAccelerationMagnitude.std         : num [1:180] -0.398 -0.416 -0.187 -0.928 -0.982 ...
 $ FrequencyBodyBodyAccelerationJerkMagnitude.std : num [1:180] -0.103 -0.533 -0.104 -0.982 -0.993 ...
 $ FrequencyBodyBodyGyroscopeMagnitude.std        : num [1:180] -0.321 -0.183 -0.398 -0.932 -0.978 ...
 $ FrequencyBodyBodyGyroscopeJerkMagnitude.std    : num [1:180] -0.382 -0.694 -0.392 -0.987 -0.995 ...
 - attr(*, "groups")= tibble [30 × 2] (S3: tbl_df/tbl/data.frame)
  ..$ Subject: int [1:30] 1 2 3 4 5 6 7 8 9 10 ...
  ..$ .rows  : list<int> [1:30] 
  .. ..$ : int [1:6] 1 2 3 4 5 6
  .. ..$ : int [1:6] 7 8 9 10 11 12
  .. ..$ : int [1:6] 13 14 15 16 17 18
  .. ..$ : int [1:6] 19 20 21 22 23 24
  .. ..$ : int [1:6] 25 26 27 28 29 30
  .. ..$ : int [1:6] 31 32 33 34 35 36
  .. ..$ : int [1:6] 37 38 39 40 41 42
  .. ..$ : int [1:6] 43 44 45 46 47 48
  .. ..$ : int [1:6] 49 50 51 52 53 54
  .. ..$ : int [1:6] 55 56 57 58 59 60
  .. ..$ : int [1:6] 61 62 63 64 65 66
  .. ..$ : int [1:6] 67 68 69 70 71 72
  .. ..$ : int [1:6] 73 74 75 76 77 78
  .. ..$ : int [1:6] 79 80 81 82 83 84
  .. ..$ : int [1:6] 85 86 87 88 89 90
  .. ..$ : int [1:6] 91 92 93 94 95 96
  .. ..$ : int [1:6] 97 98 99 100 101 102
  .. ..$ : int [1:6] 103 104 105 106 107 108
  .. ..$ : int [1:6] 109 110 111 112 113 114
  .. ..$ : int [1:6] 115 116 117 118 119 120
  .. ..$ : int [1:6] 121 122 123 124 125 126
  .. ..$ : int [1:6] 127 128 129 130 131 132
  .. ..$ : int [1:6] 133 134 135 136 137 138
  .. ..$ : int [1:6] 139 140 141 142 143 144
  .. ..$ : int [1:6] 145 146 147 148 149 150
  .. ..$ : int [1:6] 151 152 153 154 155 156
  .. ..$ : int [1:6] 157 158 159 160 161 162
  .. ..$ : int [1:6] 163 164 165 166 167 168
  .. ..$ : int [1:6] 169 170 171 172 173 174
  .. ..$ : int [1:6] 175 176 177 178 179 180
  .. ..@ ptype: int(0) 
  ..- attr(*, ".drop")= logi TRUE



